plugins {
    id "com.adarshr.test-logger" version "1.5.0"
    id "de.undercouch.download" version "3.4.3"
}

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'idea'

sourceCompatibility = 1.8
version = '1.0'
compileJava.options.encoding = 'UTF-8'
mainClassName = 'dk.sw502e18.ssr.Main'

jar {
    manifest {
        attributes 'Implementation-Title': 'Speed Sign Recognizing Car ',
                'Implementation-Version': version,
                'Main-Class': mainClassName
    }
}

run {
    args = ["-m", MODEL]
}

task webcam(type: JavaExec) {
    classpath sourceSets.main.runtimeClasspath
    main = 'dk.sw502e18.ssr.Main'
    args = ["-m", MODEL, "-w"]
}

task trainParams(type: JavaExec) {
    classpath sourceSets.main.runtimeClasspath
    main = 'dk.sw502e18.ssr.Main'
    args = ["-m", MODEL, "-t", TRAIN, "-a", TEST, "-p", PARAMS]
}

task train(type: JavaExec) {
    classpath sourceSets.main.runtimeClasspath
    main = 'dk.sw502e18.ssr.Main'
    args = ["-m", MODEL, "-t", TRAIN, "-a", TEST]
}

task install {
    doLast {
        def training = "http://benchmark.ini.rub.de/Dataset/GTSRB-Training_fixed.zip"
        def testing = "http://benchmark.ini.rub.de/Dataset/GTSRB_Online-Test-Images-Sorted.zip"
        def folder = new File("../$buildDir/dataset")
        folder.mkdirs()
        def f_train = new File(folder.toString(), 'training.zip')
        def f_test = new File(folder.toString(), 'testing.zip')

        download {
            src training
            dest f_train.absolutePath
        }

        download {
            src testing
            dest f_test.absolutePath
        }

        copy {
            from zipTree(f_train.absolutePath)
            into "../$buildDir/dataset/"
        }

        copy {
            from zipTree(f_test.absolutePath)
            into "../$buildDir/dataset/"
        }
    }
}

configurations {
    sshAntTask
    provided
    tarTree
    from
}

sourceSets {
    main.compileClasspath += configurations.provided
    test.compileClasspath += configurations.provided
    test.runtimeClasspath += configurations.provided
}

repositories {
    mavenCentral()
}

dependencies {
    sshAntTask 'org.apache.ant:ant-jsch:1.9.4', 'jsch:jsch:0.1.29'
    compile group: 'org.openpnp', name: 'opencv', version: '3.4.2-1'
    compile group: 'commons-collections', name: 'commons-collections', version: '3.2'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.0'
    compile group: 'commons-cli', name: 'commons-cli', version: '1.4'
    compile group: 'com.jcraft', name: 'jsch', version: '0.1.55'
    testCompile 'junit:junit:4.12'
    testCompile "org.mockito:mockito-core:2.+"
}

testlogger {
    theme 'mocha'
    showExceptions true
    slowThreshold 1000
    showSummary true
    showStandardStreams false
}
